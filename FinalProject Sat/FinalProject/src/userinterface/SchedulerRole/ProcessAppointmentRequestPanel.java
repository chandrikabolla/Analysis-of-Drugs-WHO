/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SchedulerRole;

import Business.Appointment.Appointment;
import Business.Enterprise.Enterprise;
import Business.Organization.SchedulerOrganization;
import Business.Patient.Patient;
import Business.UserAccount.EmployeeUserAccount;
import Business.UserAccount.UserAccountDirectory;
import Business.WorkQueue.AppointmentWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author chand
 */
public class ProcessAppointmentRequestPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessAppointmentRequestPanel
     */
    JPanel userProcessContainer;
    AppointmentWorkRequest request;
    Enterprise enterprise;
    EmployeeUserAccount eua;
    public ProcessAppointmentRequestPanel(JPanel userProcessContainer, Enterprise enterprise ,EmployeeUserAccount eua,AppointmentWorkRequest request) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.request=request;
        this.enterprise=enterprise;
        this.eua=eua;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        resultJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();

        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Result");

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backJButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 269, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitJButton))
                .addGap(280, 280, 280))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton)
                    .addComponent(backJButton))
                .addContainerGap(353, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
                 String result = resultJTextField.getText();
        boolean isValid = true;
       
        UserAccountDirectory userAccountDir=enterprise.getOrganizationDirectory().searchOrganization("Patient Organization").getUserAccountDirectory();
      //  System.out.println("Ussername: "+request.getSender().getUsername());
        Patient patient=userAccountDir.searchPatient(request.getSender().getUsername());
       // System.out.println(""+patient.getFirstName()+"         "+request.getDoctor().getName()+"       "+request.getAppointmentReqDate().toString());
        Appointment app=new Appointment(patient,request.getDoctor().getName(),request.getAppointmentReqDate());
      //  System.out.println("Patient "+patient.getFirstName());
        //app.setPatient(patient);
        patient.getAppointmentHist().add(app);
        
        
        
        SchedulerOrganization org=(SchedulerOrganization) enterprise.getOrganizationDirectory().searchOrganization("Schedule Organization");
        
        if(org==null)
        {
            System.out.println("yes null");
        }
        Appointment appoint=new Appointment(patient,request.getDoctor().getName(), request.getAppointmentReqDate());
        appoint.setScheduledBy(eua.getEmployee());
        org.getAppointmentDirectory().getAppointmentHistory().add(appoint);
          if (result.isEmpty()) {
            int messageType = JOptionPane.ERROR_MESSAGE;
            JOptionPane.showMessageDialog(null, "Result cannot be empty", "Error", messageType);
            resultJTextField.setBackground(Color.red);
            isValid = false;
        } else {
            resultJTextField.setBackground(Color.white);
        }

         if(isValid){
        request.setTestResult(resultJTextField.getText());
        request.setStatus("Completed");
         resultJTextField.setText("");
         }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SchedulerWorkArea swjp = (SchedulerWorkArea) component;
        swjp.populateTable();
        swjp.populateTodaysAppointmentTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField resultJTextField;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
